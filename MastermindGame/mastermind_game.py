'''
Question 2: Mastermind Game
For this question, you will implement the classic board game Mastermind in Python. Mastermind is a code-breaking game where the player attempts to guess the secret code generated by the computer. The objective is to implement the game logic, user input handling, and feedback generation based on the player's guesses.

Game Logic
The computer randomly generates a secret code consisting of a sequence of colors (from Black, White, Red, Blue, Green, Yellow). The player has to guess the secret code within a limited number of attempts.

Implement a text-based user interface where the player can input their guesses. Display appropriate prompts and messages to guide the player throughout the game. Provide feedback to the player after each guess.

Feedback consists of two elements: the number of correct colors in the correct positions (exact matches), and the number of correct colors in the wrong positions (right colors).

For example, if the secret code is "Red, Blue, Green, Yellow, White, White" and the player's guess is "Red, Yellow, Purple, Green, White, White" the feedback should indicate 3 exact matches (Red at beginning and White, White at end). And 2 right colors (Yellow, Green).

The game ends when the player correctly guesses the secret code or when they exhaust the allowed number of attempts (default to 15) Provide appropriate end-of-game messages based on whether the player won or lost

'''

import random

def generate_code():
    colors = ["Black", "White", "Red", "Blue", "Green", "Yellow"]
    secret_code = []
    for i in range(6):
        secret_code.append(random.choice(colors))
    return secret_code

def notify_user(secret_code, guess):
    perfect_match = 0
    right_colors = 0

    # find out how many perfect matches and right colors
    for i in range(6):
        if guess[i] == secret_code[i]:
            perfect_match += 1

    # find out how many right colors
    for i in range(6):
        right_colors += min(secret_code.count(guess[i]), guess.count(guess[i]))

    # find out how many right colors are not perfect matches
    right_colors -= perfect_match

    return perfect_match, right_colors


def play_game():
    secret_code = generate_code()
    attempts = 15
    print("Welcome to Mastermind! You have 15 attempts to guess the secret code.")
    while attempts > 0:
        guess = input("Enter your guess (comma-separated colors): ").split(", ")

        # Convert each color to lowercase
        guess_lower = [color.lower() for color in guess]

        # Convert secret_code to lowercase
        secret_code_lower = [color.lower() for color in secret_code]

        # Check if the user guessed the secret code
        if guess_lower == secret_code_lower:
            print("Congratulations! You guessed the secret code!")
            return

        perfect_match, right_colors = notify_user(secret_code_lower, guess_lower)
        print(f"Feedback: {perfect_match} exact matches, {right_colors} right colors")

        attempts -= 1

    print(f"Game over! The secret code was {secret_code}")

play_game()