20230908:
synapses 突触
dendrite 枝晶
perceptron 感知器
sigmoid 乙状
embryo 胚
threshold 门槛
substitute 代替
nand gate
=======================================================================
20230911:
Neural Network:
After your quiz is complete, I would like you to each send me at least one question that you think _should_ have appeared on the quiz. 

You can send up to 3 questions each – I don't promise to use any of them. But you get your question in the pool and there's a good chance you'll see it at some point.

Topic in AI (presentation on Wednesday)
four topics
1. Definition of AI
reference needed.

How are we using AI today? What about the future? What fields?​
https://techvidvan.com/tutorials/artificial-intelligence-applications/

https://www.foxnews.com/tech/what-ai-are-we-already-using-daily-life
=======================================================================
synapses
dendrite
perceptron
sigmoid
embryo
threshold
substitute

brace
bracket
pseudocode

terminology
modularity
scaffolding
stub out any other methods you think
backpropagation
polymorphism
encapsulate
envision
intermediate

wheelie
Anchors away!
tinted
windshield
engine displacement
stochastic

minist digits
numpy matmul vs dot


polynomial

factorization
decomposition

diagonal
pivots


Bayesian Probability
Data Mining
Long Short-Term Memory (LSTM)
Gradient Descent
Convergence
Feature Extraction
binary tree
convolutional neural network (CNN)
incremental learning
Synaptic Weights
Hyperparameter Tuning

momentum

=======================================================================
super().__init__(maker, brand, model, year, color)
This line of code is calling the __init__ method of the superclass (or parent class) in a Python class inheritance hierarchy.

Let's break it down step by step:

super():
super is a built-in Python function that returns a temporary object of the superclass.
By calling super(), we are creating an instance of the superclass that we can then use to access its methods and attributes.

__init__:
__init__ is a special method in Python that gets executed when an object is created from a class.
It is commonly used to initialize the attributes of an object.

super().__init__(maker, brand, model, year, color):
This line is calling the __init__ method of the superclass using the super() object.
The arguments maker, brand, model, year, color are being passed to the __init__ method of the superclass.
This line is used to initialize the attributes of the superclass with the values provided.
In summary, the code is calling the __init__ method of the superclass and passing certain arguments to initialize the attributes of the superclass. This helps in ensuring that the necessary attributes of the superclass are properly initialized before any additional logic or functionality is executed in the subclass.
=======================================================================
https://en.wikipedia.org/wiki/3Blue1Brown